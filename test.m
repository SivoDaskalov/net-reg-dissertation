cd('C:\Users\sivak_000\Documents\GitHub\dissertation')
disp('Tuning Grace parameters');
x = dlmread('tmp/in_x.txt');
y = dlmread('tmp/in_y.txt');
folds = dlmread('tmp/in_folds.txt');
netwk = dlmread('tmp/in_netwk.txt');
deg = dlmread('tmp/in_deg.txt');
lam1_all = dlmread('tmp/in_param_lam1.txt');
lam2_all = dlmread('tmp/in_param_lam2.txt');
origX = x;
origY = y;
results = zeros(36,3);
p = 220;
k = max(folds);
counter = 1;
tStart=tic;
for lam1_it=1:6; 
    lam1=lam1_all(lam1_it);
    for lam2_it=1:6; 
        lam2=lam2_all(lam2_it); 
        disp(sprintf('Combination %d of 36 ( %0.1f%% )', counter, (counter-1)*(100/36))); 
        cvMse = zeros(k,1); 
        for fold = 1:k; 
            training = find(folds ~= fold); 
            holdout = find(folds == fold); 
            x = origX(training,:); 
            y = origY(training,:); 
            cvx_begin quiet; 
            variable b(p); 
            pen = b(netwk(:,1))./deg(netwk(:,1))-b(netwk(:,2))./deg(netwk(:,2)); 
            minimize(sum_square(y-x*b)+lam1*norm(b,1)+lam2*sum_square(pen)); 
            cvx_end; 
            cvMse(fold) = mean((origX(holdout,:)*b - origY(holdout)).^2); 
        end; 
        mse = mean(cvMse); 
        results(counter,:) = [lam1,lam2,mse]; 
        counter = counter + 1;
    end;
end;
disp('Training model');
x = origX;
y = origY;

[minErrVal, minErrIdx] = min(results(:,3));
lam1 = results(minErrIdx,1);
lam2 = results(minErrIdx,2);

cvx_begin quiet; 
variable b(p); 
pen = b(netwk(:,1))./deg(netwk(:,1))-b(netwk(:,2))./deg(netwk(:,2)); 
minimize(sum_square(y-x*b)+lam1*norm(b,1)+lam2*sum_square(pen)); 
cvx_end; 

disp('Done');
time=toc(tStart);

dlmwrite('tmp/out_time.txt', full(time), 'precision', '%10.6f');
dlmwrite('tmp/out_results.txt', results, 'precision', '%10.6f');
dlmwrite('tmp/out_coefficients.txt', b, 'precision', '%10.6f');
dlmwrite('tmp/out_parameters.txt', b, 'precision', '%10.6f');
% exit;